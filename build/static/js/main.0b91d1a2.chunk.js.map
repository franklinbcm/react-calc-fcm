{"version":3,"sources":["components/Button/Button.jsx","App.jsx","components/Result.jsx","components/Numbers.jsx","components/Functions.jsx","components/MathOperations.jsx","index.jsx"],"names":["Button","type","text","clickHandler","className","onClick","App","useState","stack","setStack","items","words","valueResult","length","value","onClickNumber","number","onContentClear","onDelete","newStack","substring","onClickOperation","operation","onClickEqual","equal","eval","toString","Result","defaultProps","Value","numbers","renderButtons","map","Numbers","Functions","MathOperations","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIAkBeA,IAZA,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAd,OACX,wBAAQC,UAAWH,EAAMI,QAAS,kBAAMF,EAAaD,IAArD,SACI,+BAAOA,Q,quCCATI,IAAM,SAANA,MAAa,IAAD,UAEYC,oDAAS,IAFrB,2LAEPC,MAFO,cAEAC,SAFA,cAGRC,MAAQC,oDAAMH,MAAO,gBACrBI,YAAeF,MAAMG,OAAS,EAAIH,MAAMA,MAAMG,OAAS,GAAK,IAElE,OACA,oEAAMT,UAAU,mBAAhB,UACI,2DAAC,kDAAD,CAAQU,MAAOF,cACf,2DAAC,mDAAD,CAASG,cAAe,SAAAC,GAAM,OAAIP,SAAS,GAAD,OAAID,OAAJ,OAAYQ,OAEtD,2DAAC,qDAAD,CACIC,eAAgB,kBAAMR,SAAS,KAC/BS,SAAU,WACN,GAAGV,MAAMK,OAAS,EAAE,CAChB,IAAMM,EAAWX,MAAMY,UAAU,EAAEZ,MAAMK,OAAS,GAClDJ,SAASU,OAQrB,2DAAC,0DAAD,CACIE,iBAAkB,SAAAC,GACdb,SAAS,GAAD,OAAID,OAAJ,OAAYc,KAGxBC,aAAc,sBAAAC,OAEVf,SAASgB,KAAKjB,OAAOkB,mBAQtBpB,2B,yCC5CTqB,G,KAAS,SAAC,GAAW,IAAVb,EAAS,EAATA,MAGhB,OAEG,qBAAKV,UAAU,SAAf,SACI,+BAAOU,QAUfa,EAAOC,aAAe,CAClBC,MAAM,KAEKF,O,sDCjBTG,EAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAE7BC,EAAgB,SAAAhB,GAYlB,OAAOe,EAAQE,KAPM,SAAAhB,GAAM,OACvB,cAAC,IAAD,CAEKd,KAAMc,EAAOU,WACbvB,aAAcY,GAFTC,OAoBHiB,IAZC,SAAC,GAAD,IAAGlB,EAAH,EAAGA,cAAH,OACZ,yBAASX,UAAU,UAAnB,SAEQ2B,EAAchB,O,sDCTXmB,IAZG,SAAC,GAAD,IAAEjB,EAAF,EAAEA,eAAgBC,EAAlB,EAAkBA,SAAlB,OACd,0BAASd,UAAU,YAAnB,UACI,cAAC,IAAD,CAAQH,KAAK,mBAAmBC,KAAK,QAAQC,aAAcc,IAC3D,cAAC,IAAD,CAAQf,KAAK,SAASC,aAAce,S,sDCY7BiB,IAfQ,SAAC,GAAD,IAAEd,EAAF,EAAEA,iBAAkBE,EAApB,EAAoBA,aAApB,OACnB,0BAASnB,UAAU,kBAAnB,UACI,cAAC,IAAD,CAAQF,KAAK,IAAIC,aAAckB,IAC/B,cAAC,IAAD,CAAQnB,KAAK,IAAIC,aAAckB,IAC/B,cAAC,IAAD,CAAQnB,KAAK,IAAIC,aAAckB,IAC/B,cAAC,IAAD,CAAQnB,KAAK,IAAIC,aAAckB,IAC/B,cAAC,IAAD,CAAQnB,KAAK,IAAIC,aAAcoB,S,uFCNvCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0b91d1a2.chunk.js","sourcesContent":["// importar React\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Button.css'\r\n\r\n// Componente Funcional\r\nconst Button = ({type, text, clickHandler}) => (\r\n    <button className={type} onClick={() => clickHandler(text)}>\r\n        <span>{text}</span>\r\n    </button>\r\n)\r\n\r\nButton.propTypes = {\r\n    type: PropTypes.string,\r\n    text: PropTypes.string.isRequired,\r\n    clickHandler: PropTypes.func.isRequired\r\n} \r\n\r\nexport default Button","import React, { useState } from 'react'\nimport words from 'lodash.words'\nimport Result from './components/Result';\nimport Numbers from './components/Numbers'\nimport Functions from './components/Functions';\nimport MathOperations from './components/MathOperations'\nimport './App.css'\n\nconst App = () => {\n\n    const [stack, setStack] = useState(\"\")\n    const items = words(stack, /[^-^+^*^/]+/g)\n    const valueResult = (items.length > 0 ? items[items.length - 1] : \"0\") \n\n    return (\n    <main className='react-calculator'>\n        <Result value={valueResult}  />\n        <Numbers onClickNumber={number => setStack(`${stack}${number}`) } />\n\n        <Functions \n            onContentClear={() => setStack('')}\n            onDelete={() => {\n                if(stack.length > 0){\n                    const newStack = stack.substring(0,stack.length - 1)\n                    setStack(newStack)\n                }\n\n              }\n                \n            }\n                \n        />  \n        <MathOperations \n            onClickOperation={operation => {\n                setStack(`${stack}${operation}`)\n              }\n            } \n            onClickEqual={equal => {\n                // eslint-disable-next-line\n                setStack(eval(stack).toString())\n              }\n            }\n        />\n\n    </main>)\n}\n\nexport default App","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// const Result = (props)=>{\r\nconst Result = ({value})=>{\r\n    //const {value} = props;\r\n    \r\n return(\r\n   \r\n    <div className=\"result\">\r\n        <span>{value}</span>\r\n    </div>\r\n );   \r\n}\r\n\r\nResult.propTypes = {\r\n    Value: PropTypes.string.isRequired  //Si se le pone isRequired sera obligatorio pasarle un valor\r\n}\r\n\r\n//Pasar un valor por defecto, en caso que no se le haya puesto uno\r\nResult.defaultProps = { \r\n    Value:\"0\"   \r\n}\r\nexport default Result;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button/Button'\r\n\r\n// DRY: Don't repeat yourself\r\nconst numbers = [7,8,9,4,5,6,1,2,3,0]\r\n\r\nconst renderButtons = onClickNumber => {\r\n    // var number = 0\r\n    // iterar desde el bot√≥n 1 al 0 (while, for, foreach)\r\n    // var ArrayComponentes += \r\n    //<Button text={number.toString()} clickHandler={onClickNumber} />\r\n    const renderButton = number => (\r\n        <Button \r\n             key={number}  \r\n             text={number.toString()} \r\n             clickHandler={onClickNumber}\r\n        />\r\n    )\r\n    return numbers.map(renderButton)\r\n}\r\n\r\nconst Numbers = ({ onClickNumber }) => (\r\n    <section className=\"numbers\">\r\n        {\r\n            renderButtons(onClickNumber)\r\n        }\r\n    </section>\r\n)\r\n\r\nNumbers.propTypes = {\r\n    onClickNumber: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Numbers;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button/Button';\r\n\r\nconst Functions = ({onContentClear, onDelete}) => (\r\n    <section className=\"functions\">\r\n        <Button type=\"button-long-text\" text=\"clear\" clickHandler={onContentClear} />\r\n        <Button text=\"&larr;\" clickHandler={onDelete} />\r\n    </section>\r\n)\r\n\r\nFunctions.propTypes = {\r\n    onContentClear: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Functions","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button/Button';\r\n\r\nconst MathOperations = ({onClickOperation, onClickEqual}) => (\r\n    <section className=\"math-operations\">\r\n        <Button text=\"/\" clickHandler={onClickOperation} />\r\n        <Button text=\"*\" clickHandler={onClickOperation} />\r\n        <Button text=\"-\" clickHandler={onClickOperation} />\r\n        <Button text=\"+\" clickHandler={onClickOperation} />\r\n        <Button text=\"=\" clickHandler={onClickEqual} />\r\n    </section>\r\n)\r\n\r\nMathOperations.propTypes = {\r\n    onClickOperation: PropTypes.func.isRequired,\r\n    onClickEqual: PropTypes.func.isRequired\r\n}\r\n\r\nexport default MathOperations","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n  \n);\n\n "],"sourceRoot":""}